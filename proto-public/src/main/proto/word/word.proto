// Copyright 2015, gRPC Authors
// All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";
package word;

option java_multiple_files = true;
option java_package = "org.easyhan.word.grpc";
option java_outer_classname = "WordProto";
option objc_class_prefix = "MDT";

import "google/protobuf/descriptor.proto";
import "common/common.proto";

// The word service definition.
service Word {

    // A server-to-client streaming RPC.
    //
    // Obtains hanzis whose types are the given normal/poster/sexy/porn.  Results are
    // streamed rather than returned at once (e.g. in a response message with a
    // repeated field), as the lastUpsertd maybe an very old time and contain a
    // huge number of hanzis.
    rpc List (ListRequest) returns (stream WordResponse) {
    }
    rpc Visit (VisitRequest) returns (VisitResponse) {
    }

    rpc Get (GetRequest) returns (WordResponse) {
    }

    rpc Update (UpdateRequest) returns (common.StatusResponse) {
    }
}

message VisitRequest {
    string word = 1;
}

message VisitResponse {
    common.Error error = 1;
}

message GetRequest {
    string word = 1;
}


message ListRequest {
    common.HanziLevel level = 1;
    int64 lastUpdated = 2;
}

message WordResponse {
    common.Error error = 111;

    string word = 1;
    common.HanziLevel level = 2;
    int32 levelIdx = 3;
    int64 created = 4;
    int64 lastUpdated = 5;
    int32 vistCount = 6;

    repeated Pinyin pinyins = 10;
    string radical = 11;
    string wuxing = 12;
    string traditional = 13;
    string wubi = 14;
    repeated string strokes = 15;
    repeated string strokenames = 16;
    int32 strokes_count = 17;
    string basemean = 18;
    string detailmean = 19;
    repeated string terms = 20;
    repeated string riddles = 21;
    string fanyi = 22;
    string bishun = 23;
    bool defined = 24;


}


message Pinyin {
    string pinyin = 1;
    string mp3 = 2;
}

message UpdateRequest {
    string word = 1;
    string html = 2;
}